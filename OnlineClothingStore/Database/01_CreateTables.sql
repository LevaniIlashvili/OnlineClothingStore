USE OnlineClothingStore;
GO

CREATE TABLE UserRole(
	Id BIGINT PRIMARY KEY IDENTITY(1,1),
	Name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE OrderStatus(
	Id BIGINT PRIMARY KEY IDENTITY(1,1),
	Name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE InventoryLogChangeType(
	Id BIGINT PRIMARY KEY IDENTITY(1,1),
	Name VARCHAR(50) NOT NULL UNIQUE
);

CREATE TABLE [User](
	Id BIGINT PRIMARY KEY IDENTITY(1,1),
	FirstName VARCHAR(100) NOT NULL,
	LastName VARCHAR(100) NOT NULL,
	Email VARCHAR(255) NOT NULL UNIQUE,
	PasswordHash VARCHAR(255) NOT NULL,
	PhoneNumber VARCHAR(20),
	RoleId BIGINT NOT NULL,
	CreatedAt DATETIME DEFAULT GETDATE(),
	UpdatedAt DATETIME,
	CONSTRAINT FK_User_UserRole FOREIGN KEY (RoleId) REFERENCES UserRole(Id)
);

CREATE TABLE Brand(
	Id BIGINT PRIMARY KEY IDENTITY(1,1),
	Name VARCHAR(100) NOT NULL UNIQUE
);

CREATE TABLE Category(
	Id BIGINT PRIMARY KEY IDENTITY(1,1),
	Name VARCHAR(100) NOT NULL UNIQUE,
	ParentCategoryId BIGINT,
	CONSTRAINT FK_Category_ParentCategory FOREIGN KEY (ParentCategoryId) REFERENCES Category(Id)
);

CREATE TABLE [Product](
	Id BIGINT PRIMARY KEY IDENTITY(1,1),
	Name VARCHAR(255) NOT NULL,
	Description VARCHAR(MAX),
	Price DECIMAL(10, 2) NOT NULL CHECK (Price > 0),
	SkuPrefix VARCHAR(50) NOT NULL UNIQUE,
	CategoryId BIGINT NOT NULL,
	BrandId BIGINT NOT NULL,
	CONSTRAINT FK_Product_Category FOREIGN KEY (CategoryId) REFERENCES Category(Id),
	CONSTRAINT FK_Product_Brand FOREIGN KEY (BrandId) REFERENCES Brand(Id)
);

CREATE TABLE ProductVariant(
	Id BIGINT PRIMARY KEY IDENTITY(1,1),
	ProductId BIGINT NOT NULL,
	Size VARCHAR(50) NOT NULL,
	Color VARCHAR(50)NOT NULL,
	Sku VARCHAR(100) NOT NULL UNIQUE,
	StockQuantity INT NOT NULL CHECK (StockQuantity >=  0),
	ImageUrl VARCHAR(255),
	CONSTRAINT FK_ProductVariant_Product FOREIGN KEY (ProductId) REFERENCES [Product](Id)
);

CREATE TABLE Cart(
	Id BIGINT PRIMARY KEY IDENTITY(1,1),
	UserId BIGINT NOT NULL UNIQUE,
	CONSTRAINT FK_Cart_User FOREIGN KEY (UserId) REFERENCES [User](Id)
);

CREATE TABLE CartItem(
	Id BIGINT PRIMARY KEY IDENTITY(1,1),
	CartId BIGINT NOT NULL,
	ProductVariantId BIGINT NOT NULL,
	Quantity INT NOT NULL CHECK (Quantity > 0),
	CONSTRAINT FK_CartItem_Cart FOREIGN KEY (CartId) REFERENCES Cart(Id),
	CONSTRAINT FK_CartItem_ProductVariant FOREIGN KEY (ProductVariantId) REFERENCES ProductVariant(Id),
	CONSTRAINT UQ_CartItem UNIQUE (CartId, ProductVariantId)
);

CREATE TABLE [Order](
	Id BIGINT PRIMARY KEY IDENTITY(1,1),
	UserId BIGINT NOT NULL,
	OrderStatusId BIGINT NOT NULL,
	OrderDate DATETIME NOT NULL DEFAULT GETDATE(),
	TotalAmount DECIMAL(10,2) NOT NULL CHECK(TotalAmount > 0),
	ShippingAddress VARCHAR(MAX) NOT NULL,
	CreatedAt DATETIME DEFAULT GETDATE(),	
	UpdatedAt DATETIME,
	CONSTRAINT FK_Order_User FOREIGN KEY (UserId) REFERENCES [User](Id),
	CONSTRAINT FK_Order_OrderStatus FOREIGN KEY (OrderStatusId) REFERENCES OrderStatus(Id)
);

CREATE TABLE OrderItem(
	Id BIGINT PRIMARY KEY IDENTITY(1,1),
	OrderId BIGINT NOT NULL,
	ProductVariantId BIGINT NOT NULL,
	Quantity INT NOT NULL CHECK (Quantity > 0),
	PriceAtPurchase DECIMAL(10,2) NOT NULL CHECK (PriceAtPurchase > 0),
	CONSTRAINT FK_OrderItem_Order FOREIGN KEY (OrderId) REFERENCES [Order](Id),
	CONSTRAINT FK_OrderItem_ProductVariant FOREIGN KEY (ProductVariantId) REFERENCES ProductVariant(Id)
);

CREATE TABLE Payment(
	Id BIGINT PRIMARY KEY IDENTITY(1,1),
	OrderId BIGINT NOT NULL UNIQUE,
	PaymentDate DATETIME NOT NULL DEFAULT GETDATE(),
	Amount DECIMAL(10,2) NOT NULL CHECK (Amount > 0),
	PaymentMethod VARCHAR(50) NOT NULL,
	TransactionId VARCHAR(255) UNIQUE,
	CreatedAt DATETIME NOT NULL DEFAULT GETDATE(),
	CONSTRAINT FK_Payment_Order FOREIGN KEY (OrderId) REFERENCES [Order](Id)
);

CREATE TABLE InventoryLog(
	Id BIGINT PRIMARY KEY IDENTITY(1,1),
	ProductVariantId BIGINT NOT NULL,
	ChangeTypeId BIGINT NOT NULL,
	ChangeQuantity INT NOT NULL,
	NewStockQuantity INT NOT NULL,
	Reason VARCHAR(MAX),
	CreatedAt DATETIME,
	CONSTRAINT FK_InventoryLog_ProductVariant FOREIGN KEY (ProductVariantId) REFERENCES ProductVariant(Id),
	CONSTRAINT FK_InventoryLog_ChangeType FOREIGN KEY (ChangeTypeId) REFERENCES InventoryLogChangeType(Id)
);
